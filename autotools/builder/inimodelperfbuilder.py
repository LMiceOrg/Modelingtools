#!/usr/bin/env python
# -*- coding: utf-8 -*-

""" 模型性能参数构建器
    IniModelPerfBuilder

[model]
name=[model name]
count=[count of performances]

[perf<i>]
key=value
"""
md_template=u"""
# Model {md_cname} performance configuration file
# Generated by Modelingtools
# {tm_now}
[model]
#name: {md_ns} {md_cname}
name={md_name}
cname={md_cname}
count={md_count}
"""
key_template=u"""
[perf{it_id}]
"""
param_template=u"""
#name:{it_ns} {it_cname}
#desc:{it_desc}
#unit:{it_type}: {it_unit}, ({it_min}, {it_max})
{it_name} ={it_val}
"""

import basebuilder

import time

import os

class IniModelPerfBuilder(basebuilder.BaseBuilder):
    def __init__(self, datamodel, folder):
        super(IniModelPerfBuilder, self).__init__(datamodel)
        if type(folder) == str:
            self.folder = os.path.abspath(folder.decode('utf-8'))
        elif type(folder) == unicode:
            self.folder = folder
        else:
            raise TypeError("folder type (%s) is invalid!", str(type(folder)))
        self.outfiles = []

    def CreateModelIni(self, item):
        """生成模型配置参数文件"""
        md_name, md_ns, md_cname, md_desc, md_items = item.item_val[:5]
        #print item.source.encode('utf-8')
        md_count = len(md_items)
        ctx=md_template.format(md_name=md_name, md_ns=md_ns, md_cname=md_cname, tm_now = time.ctime(), md_count=md_count)

        for i in range(len(md_items)):
            #generate key
            ctx += key_template.format(it_id=i)
            #print len(md_items), len(md_items[i]), len(md_desc)
            for j in range(len(md_items[i])):
                #print len(md_desc[j]), str(md_desc[j])
                it_name, it_ns, it_cname, it_type, it_grain, it_unit, it_default, it_min, it_max, it_desc = md_desc[j][:10]
                #generate item
                ctx += param_template.format(it_name=it_name, it_ns=it_ns, it_cname=it_cname, it_type=it_type, it_grain=it_grain, it_unit=it_unit, it_default=it_default, it_min=it_min, it_max=it_max, it_desc=it_desc, it_val=md_items[i][j] )

        #write to file
        #!Sxxx without Sx_ header in M3
        if md_name[0]=='S':
            pos = md_name.find('_')
            md_name = md_name[pos+1:]
            #print md_name.encode('utf-8')
        folder = os.path.join(self.folder, "code", md_name)
        if not os.path.exists(folder):
            os.makedirs(folder)
        name = os.path.join(folder, "%s.ini" %  md_name)
        #print name.encode('utf-8')
        f=open(name, "w")
        f.write( ctx.encode('utf-8') )
        f.close()
        self.outfiles.append(name.encode('utf-8') )

    def Build(self):
        """ 根据性能参数写入ini文件 """
        for ns in self.GetNamespaces():
            for item in self.GetItemByNamespace(ns):
                if item.item_type == "ModelPerformance":#初始化参数
                    #print "ModelPerformance"
                    self.CreateModelIni(item);

    def GetFiles(self):
        return self.outfiles

